<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
       xsi:schemaLocation="http://www.springframework.org/schema/beans
       http://www.springframework.org/schema/beans/spring-beans.xsd">

    <!-- spring中的依赖注入
            依赖注入:
              能注入的数据有三类:
              基本类型和string
              其他bean类型(在配置文件中或者注解配置过的bean
              复杂类型/集合类型-->

    <!--    构造函数注入:
            使用标签 : constructor-arg
            使用位置: bean标签内部
            标签中的属性
                type:用于指定注入的数据类型
                index: 指定要注入的数据给构造函数中索引位置,从0开始
                name: 用于指定给构造函数中指定名称的参数赋值       常用
                =============指定给构造参数中哪个参数赋值======
                value:给指定的属性赋值
                ref: 用于指定其他的bean类型数据.指的就是在spring的Iod核心容器中出现过额bean对象

                优势:
                    在获取对象时,必须给构造函数中所有参数注入数据
                缺点:
                    如果用不到构造函数的某些参数数据,也必须注入数据
                -->
    <!--    <bean id="accountService" class="keen.service.impl.AccountServiceImpl">-->
    <!--        <constructor-arg name="name" value="test"/>-->
    <!--        <constructor-arg name="age"  value="19"/>-->
    <!--        <constructor-arg name="birthday" ref="now"/>-->
    <!--    </bean>-->

    <!--    配置一个日期对象-->
    <bean id="now" class="java.util.Date"/>

    <!--    使用set方法注入:
                使用的标签: property
                使用位置: bean标签内部

                优势:
                    创建对象时没有明确的限制,可以直接使用默认构造函数
                缺点:
                    如果有某个成员必须有值,则获取对象时有可能set方法没有执行
                -->
<!--    <bean id="accountService" class="keen.service.impl.AccountServiceImpl">-->
<!--        <property name="name" value="test"/>-->
<!--        <property name="age" value="19"/>-->
<!--        <property name="birthday" ref="now"/>-->
<!--    </bean>-->

    <!--    集合/复杂类型注入-->
    <bean id="accountService" class="keen.service.impl.AccountServiceImpl2">
        <property name="myStrs">
            <array>
                <value>aaa</value>
                <value>bbb</value>
                <value>ccc</value>
            </array>
        </property>
        <property name="myList">
            <list>
                <value>aaa</value>
                <value>bbb</value>
                <value>ccc</value>
            </list>
        </property>
        <property name="mySet">
            <set>
                <value>aaa</value>
                <value>bbb</value>
                <value>ccc</value>
            </set>
        </property>
        <property name="myMap">
            <map>
                <entry key="testA" value="aaa"/>
                <entry key="testB" value="bbb"/>
                <entry key="testC" value="ccc"/>
            </map>
        </property>
        <property name="myProps">
            <props>
                <prop key="testC">ccc</prop>
                <prop key="testB">bbb</prop>
            </props>
        </property>
    </bean>

</beans>